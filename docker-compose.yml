version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: discord_bot_db
    environment:
      POSTGRES_DB: discord_bot
      POSTGRES_USER: botuser
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U botuser -d discord_bot"]
      interval: 10s
      timeout: 5s
      retries: 5

  bot:
    build: ./bot
    container_name: discord_bot
    environment:
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      TAVILY_API_KEY: ${TAVILY_API_KEY}
      MODEL_NAME: ${MODEL_NAME}
      CONTEXT_WINDOW_MESSAGES: ${CONTEXT_WINDOW_MESSAGES}
      OPT_OUT_ROLE_NAME: ${OPT_OUT_ROLE_NAME}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: discord_bot
      DB_USER: botuser
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./bot:/app

volumes:
  postgres_data:
