version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: discord_bot_db
    environment:
      POSTGRES_DB: discord_bot
      POSTGRES_USER: botuser
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./sql/gdpr_migration.sql:/docker-entrypoint-initdb.d/02_gdpr.sql
      - ./sql/iracing_teams_migration.sql:/docker-entrypoint-initdb.d/03_iracing_teams.sql
      - ./backups:/backups  # Backup directory
    # SECURITY: Database port NOT exposed to host (only accessible within Docker network)
    # If you need local access for debugging, use: ports: ["127.0.0.1:5432:5432"]
    # ports:
    #   - "5432:5432"  # REMOVED for security
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U botuser -d discord_bot"]
      interval: 10s
      timeout: 5s
      retries: 5
    # SECURITY: Resource limits to prevent DoS
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          memory: 512M
    # Disable swap for database performance and security
    mem_swappiness: 0

  bot:
    build: ./bot
    container_name: discord_bot
    environment:
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      TAVILY_API_KEY: ${TAVILY_API_KEY}
      MODEL_NAME: ${MODEL_NAME}
      CONTEXT_WINDOW_MESSAGES: ${CONTEXT_WINDOW_MESSAGES}
      OPT_OUT_ROLE_NAME: ${OPT_OUT_ROLE_NAME}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: discord_bot
      DB_USER: botuser
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./bot:/app
    # SECURITY: Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          memory: 256M

  # Automated database backups
  postgres-backup:
    image: prodrigestivill/postgres-backup-local:15
    container_name: discord_bot_backup
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: discord_bot
      POSTGRES_USER: botuser
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SCHEDULE: "@daily"  # Daily backups at midnight
      BACKUP_KEEP_DAYS: 7  # Keep 7 daily backups
      BACKUP_KEEP_WEEKS: 4  # Keep 4 weekly backups
      BACKUP_KEEP_MONTHS: 3  # Keep 3 monthly backups
    volumes:
      - ./backups:/backups
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
